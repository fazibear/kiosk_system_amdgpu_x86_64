From 4135bd2e13880866deb0440855d1a869397e5024 Mon Sep 17 00:00:00 2001
From: Bernd Kuhls <bernd.kuhls@t-online.de>
Date: Fri, 4 Nov 2016 19:44:37 +0100
Subject: [PATCH] Fix endianess detection with musl-based toolchains

Musl does not define __GLIBC__ and will not provide a __MUSL__ macro:
http://wiki.musl-libc.org/wiki/FAQ#Q:_why_is_there_no_MUSL_macro_.3F

This patch checks for the presence of endian.h and promotes the result
to src/amd/Makefile.addrlib.am which executes the broken build command.
Fixes compile errors detected by the autobuilder infrastructure of the
buildroot project:

http://autobuild.buildroot.net/results/e27/e27a9a95f72dba3076549beb2a2ccfdbea2fcfee/
http://autobuild.buildroot.net/results/e27/e27a9a95f72dba3076549beb2a2ccfdbea2fcfee/

Patch sent upstream: https://patchwork.freedesktop.org/patch/119961/

Signed-off-by: Bernd Kuhls <bernd.kuhls@t-online.de>
[Romain: rebase on mesa 17.3.1]
Signed-off-by: Romain Naour <romain.naour@gmail.com>
---
 configure.ac                | 1 +
 src/amd/Makefile.addrlib.am | 1 +
 src/util/u_endian.h         | 2 +-
 3 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/configure.ac b/configure.ac
index a02173f244..ee03d6f582 100644
--- a/configure.ac
+++ b/configure.ac
@@ -791,6 +791,7 @@ fi
 AC_HEADER_MAJOR
 AC_CHECK_HEADER([xlocale.h], [DEFINES="$DEFINES -DHAVE_XLOCALE_H"])
 AC_CHECK_HEADER([sys/sysctl.h], [DEFINES="$DEFINES -DHAVE_SYS_SYSCTL_H"])
+AC_CHECK_HEADER([endian.h], [DEFINES="$DEFINES -DHAVE_ENDIAN_H"])
 AC_CHECK_FUNC([strtof], [DEFINES="$DEFINES -DHAVE_STRTOF"])
 AC_CHECK_FUNC([mkostemp], [DEFINES="$DEFINES -DHAVE_MKOSTEMP"])
 AC_CHECK_FUNC([memfd_create], [DEFINES="$DEFINES -DHAVE_MEMFD_CREATE"])
diff --git a/src/amd/Makefile.addrlib.am b/src/amd/Makefile.addrlib.am
index 46689637f9..508edfd0d5 100644
--- a/src/amd/Makefile.addrlib.am
+++ b/src/amd/Makefile.addrlib.am
@@ -30,6 +30,7 @@ addrlib_libamdgpu_addrlib_la_CPPFLAGS = \
  -I$(srcdir)/addrlib/inc/chip/r800 \
  -I$(srcdir)/addrlib/gfx9/chip \
  -I$(srcdir)/addrlib/r800/chip \
+ $(DEFINES) \
  -DBRAHMA_BUILD=1

 addrlib_libamdgpu_addrlib_la_CXXFLAGS = \
diff --git a/src/util/u_endian.h b/src/util/u_endian.h
index 9e09f80181..038a28fac9 100644
--- a/src/util/u_endian.h
+++ b/src/util/u_endian.h
@@ -27,7 +27,7 @@
 #ifndef U_ENDIAN_H
 #define U_ENDIAN_H

-#if defined(__GLIBC__) || defined(ANDROID) || defined(__CYGWIN__)
+#if defined(__GLIBC__) || defined(ANDROID) || defined(__CYGWIN__) || defined(HAVE_ENDIAN_H)
 #include <endian.h>

 #if __BYTE_ORDER == __LITTLE_ENDIAN
--
2.14.3
nerves@hz1:~/kiosk_mesa3d/example$ cat ../package/mesa3d/0003-configure.ac-invert-order-for-wayland-scanner-check.patch

m 11a759c33160db6e887e7640071ba84482e6164f Mon Sep 17 00:00:00 2001
From: Gustavo Zacarias <gustavo@zacarias.com.ar>
Date: Thu, 17 Nov 2016 15:36:54 -0300
Subject: [PATCH] configure.ac: invert order for wayland-scanner check

When cross-compiling the .pc file might point to the wrong
wayland-scanner binary (target rather than host) resulting in a
non-executable and wrong scanner.
Try searching the PATH first, and if that fails fall back into
pkg-config.

[Vincent: tweak patch for 17.1.1 version]

Signed-off-by: Gustavo Zacarias <gustavo@zacarias.com.ar>
Signed-off-by: Vicente Olivert Riera <Vincent.Riera@imgtec.com>
[Romain: rebase on 17.3.1]
Signed-off-by: Romain Naour <romain.naour@gmail.com>
---
 configure.ac | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/configure.ac b/configure.ac
index ee03d6f582..786b7214b9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1695,11 +1695,11 @@ if test "x$with_platforms" = xauto; then
     with_platforms=$with_egl_platforms
 fi

-PKG_CHECK_MODULES([WAYLAND_SCANNER], [wayland-scanner],
-        WAYLAND_SCANNER=`$PKG_CONFIG --variable=wayland_scanner wayland-scanner`,
-        WAYLAND_SCANNER='')
+AC_PATH_PROG([WAYLAND_SCANNER], [wayland-scanner])
 if test "x$WAYLAND_SCANNER" = x; then
-    AC_PATH_PROG([WAYLAND_SCANNER], [wayland-scanner], [:])
+ PKG_CHECK_MODULES([WAYLAND_SCANNER], [wayland-scanner],
+   WAYLAND_SCANNER=`$PKG_CONFIG --variable=wayland_scanner wayland-scanner`,
+   WAYLAND_SCANNER='')
 fi

 PKG_CHECK_EXISTS([wayland-protocols >= $WAYLAND_PROTOCOLS_REQUIRED], [have_wayland_protocols=yes], [have_wayland_protocols=no])
--
2.14.3
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$
nerves@hz1:~/kiosk_mesa3d/example$ cat ../package/mesa3d/0003-configure.ac-invert-order-for-wayland-scanner-check.patch

m 11a759c33160db6e887e7640071ba84482e6164f Mon Sep 17 00:00:00 2001
From: Gustavo Zacarias <gustavo@zacarias.com.ar>
Date: Thu, 17 Nov 2016 15:36:54 -0300
Subject: [PATCH] configure.ac: invert order for wayland-scanner check

When cross-compiling the .pc file might point to the wrong
wayland-scanner binary (target rather than host) resulting in a
non-executable and wrong scanner.
Try searching the PATH first, and if that fails fall back into
pkg-config.

[Vincent: tweak patch for 17.1.1 version]

Signed-off-by: Gustavo Zacarias <gustavo@zacarias.com.ar>
Signed-off-by: Vicente Olivert Riera <Vincent.Riera@imgtec.com>
[Romain: rebase on 17.3.1]
Signed-off-by: Romain Naour <romain.naour@gmail.com>
---
 configure.ac | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/configure.ac b/configure.ac
index ee03d6f582..786b7214b9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1695,11 +1695,11 @@ if test "x$with_platforms" = xauto; then
     with_platforms=$with_egl_platforms
 fi

-PKG_CHECK_MODULES([WAYLAND_SCANNER], [wayland-scanner],
-        WAYLAND_SCANNER=`$PKG_CONFIG --variable=wayland_scanner wayland-scanner`,
-        WAYLAND_SCANNER='')
+AC_PATH_PROG([WAYLAND_SCANNER], [wayland-scanner])
 if test "x$WAYLAND_SCANNER" = x; then
-    AC_PATH_PROG([WAYLAND_SCANNER], [wayland-scanner], [:])
+ PKG_CHECK_MODULES([WAYLAND_SCANNER], [wayland-scanner],
+   WAYLAND_SCANNER=`$PKG_CONFIG --variable=wayland_scanner wayland-scanner`,
+   WAYLAND_SCANNER='')
 fi

 PKG_CHECK_EXISTS([wayland-protocols >= $WAYLAND_PROTOCOLS_REQUIRED], [have_wayland_protocols=yes], [have_wayland_protocols=no])
--
2.14.3
